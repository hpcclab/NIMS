apiVersion: v1
kind: ServiceAccount
metadata:
  name: ssu
secrets:
  - name: default-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ssu-role-cluster
rules:
  - apiGroups: [podmig.dcn.ssu.ac.kr]
    resources: [podmigrations]
    verbs: [list, watch, create]
  - apiGroups: [ "" ]
    resources: [ pods ]
    verbs: [ list, watch, update, create, delete ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ssu-rolebinding-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ssu-role-cluster
subjects:
  - kind: ServiceAccount
    name: ssu
    namespace: default
#---
#apiVersion: v1
#kind: ServiceAccount
#metadata:
#  name: ssu
#  namespace: myproject
#secrets:
#  - name: default-token
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRoleBinding
#metadata:
#  name: ssu-rolebinding-cluster-myproject
#roleRef:
#  apiGroup: rbac.authorization.k8s.io
#  kind: ClusterRole
#  name: ssu-role-cluster
#subjects:
#  - kind: ServiceAccount
#    name: ssu
#    namespace: myproject
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssu-operator
  labels:
    app: ssu-operator
  annotations:
    migration-bypass: 'True'
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: ssu-operator
  template:
    metadata:
      labels:
        app: ssu-operator
      annotations:
        migration-bypass: 'True'
    spec:
      serviceAccountName: ssu
      containers:
        - name: operator
          image: ghcr.io/hpcclab/nims/ssu-operator:main
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /root/.kube/config
              name: kubeconfig
            - mountPath: /var/lib/kubelet/migration
              name: migration
      volumes:
        - name: kubeconfig
          hostPath:
            path: /home/hpcclab/.kube/config
        - name: migration
          hostPath:
            path: /var/lib/kubelet/migration
            type: Directory
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssu-apiserver
  labels:
    app: ssu-apiserver
  annotations:
    migration-bypass: 'True'
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: ssu-apiserver
  template:
    metadata:
      labels:
        app: ssu-apiserver
      annotations:
        migration-bypass: 'True'
    spec:
      serviceAccountName: ssu
      containers:
        - name: apiserver
          image: ghcr.io/hpcclab/nims/ssu-apiserver:main
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: ssu-apiserver
  labels:
    app: ssu-apiserver
spec:
  selector:
    app: ssu-apiserver
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssu-interface
  labels:
    app: ssu-interface
  annotations:
    migration-bypass: 'True'
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: ssu-interface
  template:
    metadata:
      labels:
        app: ssu-interface
      annotations:
        migration-bypass: 'True'
        migration-interface: 'ssu'
    spec:
      serviceAccountName: ssu
      containers:
        - name: interface
          image: ghcr.io/hpcclab/nims/ssu-interface:main
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /var/lib/kubelet/migration
              name: migration
            - mountPath: /etc/podinfo
              name: podinfo
          envFrom:
            - configMapRef:
                name: migration-env
          env:
            - name: HOST
              value: "ssu-apiserver:5000"
          startupProbe:
            httpGet:
              port: 8888
          livenessProbe:
            httpGet:
              port: 8888
      volumes:
        - name: migration
          hostPath:
            path: /var/lib/kubelet/migration
            type: Directory
        - name: podinfo
          downwardAPI:
            items:
              - path: "annotations"
                fieldRef:
                  fieldPath: metadata.annotations
---
apiVersion: v1
kind: Service
metadata:
  name: ssu-interface-nodeport
  labels:
    app: ssu-interface
spec:
  type: NodePort
  selector:
    app: ssu-interface
  ports:
    - protocol: TCP
      port: 2222
      targetPort: 22
      nodePort: 30002
---
apiVersion: v1
kind: Service
metadata:
  name: ssu-interface
  labels:
    app: ssu-interface
spec:
  selector:
    app: ssu-interface
  ports:
    - protocol: TCP
      port: 8888
      targetPort: 8888