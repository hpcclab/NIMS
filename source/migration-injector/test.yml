---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusterkopfpeerings.kopf.dev
spec:
  scope: Cluster
  group: kopf.dev
  names:
    kind: ClusterKopfPeering
    plural: clusterkopfpeerings
    singular: clusterkopfpeering
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
---
apiVersion: kopf.dev/v1
kind: ClusterKopfPeering
metadata:
  name: migration-coordinator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: migration-coordinator
secrets:
  - name: default-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: migration-coordinator-role-cluster
rules:

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [kopf.dev]
    resources: [clusterkopfpeerings]
    verbs: [list, watch, patch, get, create, delete]

  # Framework: runtime observation of namespaces & CRDs (addition/deletion).
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, watch]
  - apiGroups: [""]
    resources: [namespaces, services, pods, events, nodes]
    verbs: [ get, list, watch, patch, create, delete ]
  - apiGroups: [apps]
    resources: [deployments]
    verbs: [get, list, watch, patch, create, delete]
  - apiGroups: [ networking.k8s.io ]
    resources: [ ingresses ]
    verbs: [ get, list, watch, create, delete ]

  # Framework: admission webhook configuration management.
  - apiGroups: [admissionregistration.k8s.io]
    resources: [validatingwebhookconfigurations, mutatingwebhookconfigurations]
    verbs: [create, patch]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: migration-coordinator-rolebinding-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: migration-coordinator-role-cluster
subjects:
  - kind: ServiceAccount
    name: migration-coordinator
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: migration-injector
  labels:
    app: migration-injector
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: migration-injector
  template:
    metadata:
      labels:
        app: migration-injector
    spec:
      serviceAccountName: migration-coordinator
      containers:
        - name: injector
          image: migration-injector:latest
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /src/app
              name: app
            - mountPath: /src/share
              name: share
          env:
            - name: ENGINE_CINC
              value: migration-interface-cinc:latest
            - name: ENGINE_API_SERVER
              value: migration-interface-api-server:latest
            - name: ENGINE_INTERFACE
              value: migration-interface-interface:latest
            - name: ENGINE_MONITOR
              value: migration-interface-monitor:latest
            - name: EVALUATION_REDIRECTOR
              value: migration-evaluation-redirector:latest
            - name: IMAGE_PULL_POLICY
              value: IfNotPresent
      volumes:
        - name: app
          hostPath:
            # directory location on host
            path: /run/desktop/mnt/host/c/Users/User/Projects/migration-coordinator/injector
            # this field is optional
            type: Directory
        - name: share
          hostPath:
            # directory location on host
            path: /run/desktop/mnt/host/c/Users/User/Projects/migration-coordinator/share
            # this field is optional
            type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: migration-injector
  labels:
    app: migration-injector
spec:
  type: NodePort
  selector:
    app: migration-injector
  ports:
    - protocol: TCP
      port: 30000
      targetPort: 30000
      nodePort: 30000
